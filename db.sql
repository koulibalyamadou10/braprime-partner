-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.app_settings (
  id integer NOT NULL DEFAULT nextval('app_settings_id_seq'::regclass),
  key character varying NOT NULL UNIQUE,
  value jsonb NOT NULL,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT app_settings_pkey PRIMARY KEY (id)
);
CREATE TABLE public.archived_order_status_history (
  id uuid,
  order_id uuid,
  status character varying,
  description text,
  created_by uuid,
  created_at timestamp with time zone
);
CREATE TABLE public.archived_subscription_changes (
  id uuid,
  subscription_id uuid,
  old_plan_id uuid,
  new_plan_id uuid,
  change_reason text,
  effective_date timestamp with time zone,
  price_difference numeric,
  created_at timestamp with time zone
);
CREATE TABLE public.archived_subscription_invoices (
  id uuid,
  subscription_id uuid,
  payment_id uuid,
  invoice_number character varying,
  amount numeric,
  tax_amount numeric,
  total_amount numeric,
  status USER-DEFINED,
  due_date timestamp with time zone,
  paid_date timestamp with time zone,
  invoice_url character varying,
  created_at timestamp with time zone,
  updated_at timestamp with time zone
);
CREATE TABLE public.business_types (
  id integer NOT NULL DEFAULT nextval('business_types_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  icon character varying NOT NULL,
  color character varying NOT NULL,
  description text,
  features jsonb DEFAULT '[]'::jsonb,
  image_url character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT business_types_pkey PRIMARY KEY (id)
);
CREATE TABLE public.businesses (
  id integer NOT NULL DEFAULT nextval('businesses_id_seq'::regclass),
  name character varying NOT NULL,
  description text,
  business_type_id integer,
  category_id integer,
  cover_image character varying,
  logo character varying,
  rating numeric DEFAULT 0.0,
  review_count integer DEFAULT 0,
  delivery_time character varying DEFAULT '30-45 min'::character varying,
  delivery_fee integer DEFAULT 5000,
  address text NOT NULL,
  phone character varying,
  email character varying,
  opening_hours character varying,
  cuisine_type character varying,
  latitude numeric,
  longitude numeric,
  is_active boolean DEFAULT true,
  is_open boolean DEFAULT true,
  owner_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  delivery_slots jsonb DEFAULT '[]'::jsonb,
  delivery_zone_id integer,
  delivery_zones jsonb DEFAULT '[]'::jsonb,
  max_orders_per_slot integer DEFAULT 10,
  requires_subscription boolean DEFAULT false,
  subscription_status character varying DEFAULT 'none'::character varying CHECK (subscription_status::text = ANY (ARRAY['none'::character varying, 'pending'::character varying, 'active'::character varying, 'expired'::character varying]::text[])),
  current_subscription_id uuid,
  request_status character varying DEFAULT 'approved'::character varying,
  request_notes text,
  delivery_radius integer DEFAULT 5,
  specialties ARRAY,
  accepts_reservations boolean DEFAULT false,
  owner_name character varying,
  owner_email character varying,
  owner_phone character varying,
  has_own_drivers boolean DEFAULT false,
  CONSTRAINT businesses_pkey PRIMARY KEY (id),
  CONSTRAINT businesses_current_subscription_id_fkey FOREIGN KEY (current_subscription_id) REFERENCES public.partner_subscriptions(id),
  CONSTRAINT businesses_business_type_id_fkey FOREIGN KEY (business_type_id) REFERENCES public.business_types(id),
  CONSTRAINT businesses_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id)
);
CREATE TABLE public.cart (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  business_id integer CHECK (business_id IS NULL OR business_id > 0),
  delivery_method character varying DEFAULT 'delivery'::character varying,
  delivery_address text,
  delivery_instructions text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cart_pkey PRIMARY KEY (id),
  CONSTRAINT cart_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT cart_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.cart_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  cart_id uuid NOT NULL,
  menu_item_id integer,
  name character varying NOT NULL,
  price integer NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  image character varying,
  special_instructions text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cart_items_pkey PRIMARY KEY (id),
  CONSTRAINT cart_items_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.cart(id),
  CONSTRAINT cart_items_menu_item_id_fkey FOREIGN KEY (menu_item_id) REFERENCES public.menu_items(id)
);
CREATE TABLE public.categories (
  id integer NOT NULL DEFAULT nextval('categories_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  icon character varying NOT NULL,
  color character varying NOT NULL,
  link character varying NOT NULL,
  description text,
  is_active boolean DEFAULT true,
  image character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.driver_documents (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  driver_id uuid,
  document_type character varying NOT NULL,
  document_number character varying,
  file_url text NOT NULL,
  status character varying DEFAULT 'pending'::character varying,
  expiry_date date,
  verified_at timestamp with time zone,
  verified_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT driver_documents_pkey PRIMARY KEY (id)
);
CREATE TABLE public.driver_profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  vehicle_type character varying,
  vehicle_plate character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  avatar_url text,
  name text,
  business_id integer,
  email text,
  phone_number text,
  type USER-DEFINED DEFAULT 'independent'::driver_type,
  is_available boolean NOT NULL DEFAULT true,
  current_latitude numeric CHECK (current_latitude IS NULL OR current_latitude >= '-90'::integer::numeric AND current_latitude <= 90::numeric),
  current_longitude numeric CHECK (current_longitude IS NULL OR current_longitude >= '-180'::integer::numeric AND current_longitude <= 180::numeric),
  last_location_update timestamp with time zone DEFAULT now(),
  location_accuracy numeric,
  is_location_enabled boolean DEFAULT false,
  CONSTRAINT driver_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT driver_profiles_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT driver_profiles_user_id_fkey FOREIGN KEY (id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.favorite_businesses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  business_id integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT favorite_businesses_pkey PRIMARY KEY (id),
  CONSTRAINT favorite_businesses_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT favorite_businesses_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id)
);
CREATE TABLE public.favorite_menu_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  menu_item_id integer NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT favorite_menu_items_pkey PRIMARY KEY (id),
  CONSTRAINT favorite_menu_items_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT favorite_menu_items_menu_item_id_fkey FOREIGN KEY (menu_item_id) REFERENCES public.menu_items(id)
);
CREATE TABLE public.menu_categories (
  id integer NOT NULL DEFAULT nextval('menu_categories_id_seq'::regclass),
  name character varying NOT NULL,
  description text,
  business_id integer,
  is_active boolean DEFAULT true,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT menu_categories_pkey PRIMARY KEY (id),
  CONSTRAINT menu_categories_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id)
);
CREATE TABLE public.menu_items (
  id integer NOT NULL DEFAULT nextval('menu_items_id_seq'::regclass),
  name character varying NOT NULL,
  description text,
  price integer NOT NULL,
  image character varying,
  category_id integer,
  business_id integer,
  is_popular boolean DEFAULT false,
  is_available boolean DEFAULT true,
  allergens jsonb DEFAULT '[]'::jsonb,
  nutritional_info jsonb DEFAULT '{}'::jsonb,
  preparation_time integer,
  sort_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT menu_items_pkey PRIMARY KEY (id),
  CONSTRAINT menu_items_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT menu_items_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.menu_categories(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  type character varying NOT NULL,
  title character varying NOT NULL,
  message text NOT NULL,
  priority character varying DEFAULT 'medium'::character varying,
  is_read boolean DEFAULT false,
  data jsonb DEFAULT '{}'::jsonb,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.order_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid NOT NULL,
  menu_item_id integer,
  name character varying NOT NULL,
  price integer NOT NULL CHECK (price >= 0),
  quantity integer NOT NULL DEFAULT 1 CHECK (quantity > 0),
  image character varying,
  special_instructions text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id),
  CONSTRAINT order_items_menu_item_id_fkey FOREIGN KEY (menu_item_id) REFERENCES public.menu_items(id)
);
CREATE TABLE public.orders (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  business_id integer,
  status character varying DEFAULT 'pending'::character varying,
  total integer NOT NULL,
  delivery_fee integer DEFAULT 0,
  grand_total integer NOT NULL,
  delivery_method character varying DEFAULT 'delivery'::character varying,
  delivery_address text,
  delivery_instructions text,
  payment_method character varying DEFAULT 'cash'::character varying,
  payment_status character varying DEFAULT 'pending'::character varying,
  estimated_delivery timestamp with time zone,
  actual_delivery timestamp with time zone,
  driver_id uuid,
  customer_rating integer CHECK (customer_rating >= 1 AND customer_rating <= 5),
  customer_review text,
  pickup_coordinates jsonb,
  delivery_coordinates jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  preferred_delivery_time timestamp with time zone,
  delivery_type character varying DEFAULT 'asap'::character varying CHECK (delivery_type::text = ANY (ARRAY['asap'::character varying, 'scheduled'::character varying]::text[])),
  available_for_drivers boolean DEFAULT false,
  scheduled_delivery_window_start timestamp with time zone,
  scheduled_delivery_window_end timestamp with time zone,
  landmark character varying,
  order_number character varying,
  service_fee integer DEFAULT 0,
  verification_code character varying UNIQUE,
  assigned_at timestamp with time zone,
  delivery_latitude numeric CHECK (delivery_latitude IS NULL OR delivery_latitude >= '-90'::integer::numeric AND delivery_latitude <= 90::numeric),
  delivery_longitude numeric CHECK (delivery_longitude IS NULL OR delivery_longitude >= '-180'::integer::numeric AND delivery_longitude <= 180::numeric),
  delivery_formatted_address text,
  pickup_latitude numeric CHECK (pickup_latitude IS NULL OR pickup_latitude >= '-90'::integer::numeric AND pickup_latitude <= 90::numeric),
  pickup_longitude numeric CHECK (pickup_longitude IS NULL OR pickup_longitude >= '-180'::integer::numeric AND pickup_longitude <= 180::numeric),
  pickup_formatted_address text,
  delivery_group_id uuid,
  transaction_id character varying,
  is_grouped_delivery boolean DEFAULT false,
  group_sequence integer,
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.driver_profiles(id),
  CONSTRAINT orders_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT orders_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.partner_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  partner_id integer,
  plan_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::subscription_status,
  start_date timestamp with time zone NOT NULL,
  end_date timestamp with time zone NOT NULL,
  auto_renew boolean DEFAULT false,
  total_paid numeric NOT NULL,
  monthly_amount numeric NOT NULL,
  savings_amount numeric DEFAULT 0,
  billing_email character varying,
  billing_phone character varying,
  billing_address text,
  tax_id character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT partner_subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT partner_subscriptions_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.subscription_plans(id),
  CONSTRAINT partner_subscriptions_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES public.businesses(id)
);
CREATE TABLE public.payment_methods (
  id integer NOT NULL DEFAULT nextval('payment_methods_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  icon character varying NOT NULL,
  description text,
  is_available boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT payment_methods_pkey PRIMARY KEY (id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  order_id uuid,
  amount integer NOT NULL,
  method character varying NOT NULL,
  status character varying DEFAULT 'pending'::character varying,
  transaction_id character varying,
  gateway_response jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  payment_type character varying DEFAULT 'single'::character varying CHECK (payment_type::text = ANY (ARRAY['single'::character varying, 'grouped'::character varying]::text[])),
  delivery_group_id uuid,
  total_orders_count integer DEFAULT 1,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.profil_internal_user (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  business_id integer NOT NULL,
  name character varying NOT NULL,
  email character varying NOT NULL,
  phone character varying,
  is_active boolean DEFAULT true,
  last_login timestamp with time zone,
  created_by uuid NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  roles ARRAY,
  CONSTRAINT profil_internal_user_pkey PRIMARY KEY (id),
  CONSTRAINT profil_internal_user_user_id_fkey1 FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT profil_internal_user_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT profil_internal_user_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.request_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  request_id uuid NOT NULL,
  event_type text NOT NULL CHECK (event_type = ANY (ARRAY['submitted'::text, 'approved'::text, 'rejected'::text, 'comment'::text, 'updated'::text])),
  actor_id uuid,
  payload jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT request_events_pkey PRIMARY KEY (id),
  CONSTRAINT request_events_actor_id_fkey FOREIGN KEY (actor_id) REFERENCES auth.users(id),
  CONSTRAINT request_events_request_id_fkey FOREIGN KEY (request_id) REFERENCES public.requests(id)
);
CREATE TABLE public.requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  entity_type text NOT NULL CHECK (entity_type = ANY (ARRAY['business'::text, 'driver'::text])),
  business_id integer,
  driver_id uuid,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  submitted_by uuid,
  reviewed_by uuid,
  reviewed_at timestamp with time zone,
  notes text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  owner_name character varying,
  owner_email character varying,
  owner_phone character varying,
  business_name character varying,
  business_type character varying,
  business_address text,
  business_phone character varying,
  business_email character varying,
  business_description text,
  opening_hours text,
  delivery_radius integer DEFAULT 5,
  cuisine_type character varying,
  specialties ARRAY,
  accepts_reservations boolean DEFAULT false,
  has_own_drivers boolean DEFAULT false,
  plan_type character varying,
  selected_plan_name character varying,
  selected_plan_price numeric,
  driver_name character varying,
  driver_email character varying,
  driver_phone character varying,
  vehicle_type character varying,
  vehicle_plate character varying,
  driver_type character varying DEFAULT 'independent'::character varying,
  experience_years integer DEFAULT 0,
  availability_hours text,
  preferred_zones ARRAY,
  driver_notes text,
  CONSTRAINT requests_pkey PRIMARY KEY (id),
  CONSTRAINT requests_submitted_by_fkey FOREIGN KEY (submitted_by) REFERENCES auth.users(id),
  CONSTRAINT requests_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT requests_reviewed_by_fkey FOREIGN KEY (reviewed_by) REFERENCES auth.users(id),
  CONSTRAINT requests_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.driver_profiles(id)
);
CREATE TABLE public.reservations (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  business_id integer,
  date date NOT NULL,
  time time without time zone NOT NULL,
  guests integer NOT NULL DEFAULT 1,
  status character varying DEFAULT 'pending'::character varying,
  special_requests text,
  table_number integer,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reservations_pkey PRIMARY KEY (id),
  CONSTRAINT reservations_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id)
);
CREATE TABLE public.reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  business_id integer,
  order_id uuid,
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  comment text,
  images jsonb DEFAULT '[]'::jsonb,
  is_verified boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT reviews_pkey PRIMARY KEY (id),
  CONSTRAINT reviews_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT reviews_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT reviews_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id)
);
CREATE TABLE public.subscription_payments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  subscription_id uuid NOT NULL,
  amount numeric NOT NULL,
  payment_method USER-DEFINED NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::payment_status,
  transaction_reference character varying,
  payment_date timestamp with time zone,
  processed_date timestamp with time zone,
  failure_reason text,
  receipt_url character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_payments_pkey PRIMARY KEY (id),
  CONSTRAINT subscription_payments_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.partner_subscriptions(id)
);
CREATE TABLE public.subscription_plans (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  plan_type USER-DEFINED NOT NULL UNIQUE,
  name character varying NOT NULL,
  description text,
  duration_months integer NOT NULL,
  price numeric NOT NULL,
  monthly_price numeric NOT NULL,
  savings_percentage numeric,
  features jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT subscription_plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_addresses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  label character varying NOT NULL,
  street character varying NOT NULL,
  city character varying NOT NULL,
  state character varying NOT NULL,
  postal_code character varying,
  country character varying DEFAULT 'Guinée'::character varying,
  latitude numeric,
  longitude numeric,
  is_default boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_addresses_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_notification_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL UNIQUE,
  email_notifications boolean DEFAULT true,
  push_notifications boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  order_updates boolean DEFAULT true,
  promotions boolean DEFAULT true,
  delivery_updates boolean DEFAULT true,
  system_notifications boolean DEFAULT true,
  marketing_emails boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_notification_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT user_notification_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL,
  name character varying NOT NULL,
  email character varying NOT NULL UNIQUE,
  role_id integer DEFAULT 1,
  phone_number character varying,
  address text,
  profile_image character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  bio text,
  website text,
  social_media text,
  date_of_birth date,
  gender text CHECK (gender = ANY (ARRAY['male'::text, 'female'::text, 'other'::text])),
  city text,
  postal_code text,
  country text DEFAULT 'Guinée'::text,
  is_verified boolean DEFAULT false,
  is_manual_creation boolean DEFAULT false,
  businesse_id integer,
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.user_roles(id),
  CONSTRAINT user_profiles_businesse_id_fkey FOREIGN KEY (businesse_id) REFERENCES public.businesses(id),
  CONSTRAINT user_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_push_tokens (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  expo_push_token text NOT NULL UNIQUE,
  device_type character varying NOT NULL DEFAULT 'unknown'::character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_push_tokens_pkey PRIMARY KEY (id),
  CONSTRAINT user_push_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_roles (
  id integer NOT NULL DEFAULT nextval('user_roles_id_seq'::regclass),
  name character varying NOT NULL UNIQUE,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_roles_pkey PRIMARY KEY (id)
);